---
version: "3.7"
services:
  frontend-build:
    build:
      context: ./
      dockerfile: tools/docker/services/frontend-build/Dockerfile
    volumes:
      - ./:/site
  frontend-nginx:
    build:
      context: ./
      dockerfile: tools/docker/services/frontend-nginx/Dockerfile
      args:
        FRONTEND_NGINX_PORT_HTTP: ${FRONTEND_NGINX_PORT_HTTP}
        FRONTEND_NGINX_PORT_HTTPS: ${FRONTEND_NGINX_PORT_HTTPS}
        BACKEND_CACHE_PORT: ${BACKEND_CACHE_PORT_HTTP}
        FRONTEND_PAGESPEED_FILE_CACHE: ${FRONTEND_PAGESPEED_FILE_CACHE}
    ports:
      - 80:${FRONTEND_NGINX_PORT_HTTP}
      - 443:${FRONTEND_NGINX_PORT_HTTPS}
    volumes:
      - ./dist:/dist:ro
      - letsencrypt:/tls
      - certbot:/certbot
      - type: tmpfs
        target: ${FRONTEND_PAGESPEED_FILE_CACHE?err}
    depends_on:
      - backend-cache
    networks:
      - frontend_web
  backend-cache:
    build:
      context: tools/docker/services/backend-cache
      dockerfile: Dockerfile
      args:
        BACKEND_NGINX_PORT_HTTP: ${BACKEND_NGINX_PORT_HTTP}
    volumes:
      - type: tmpfs
        target: /var/lib/varnish:exec
      - type: tmpfs
        target: /usr/local/var/varnish:exec
    expose:
      - ${BACKEND_CACHE_PORT_HTTP?err}/tcp
    networks:
      - frontend_web
      - backend_app
  backend-nginx:
    build:
      context: ./
      dockerfile: tools/docker/services/backend-nginx/Dockerfile
      args:
        APP_GROUP_NAME: ${APP_GROUP_NAME}
        APP_GROUP_ID: ${APP_GROUP_ID}
        APP_CODE_DIR: ${APP_ROOT_DIR}/application
        PHP_SOCKET_DIR: ${PHP_SOCKET_DIR}
        PHP_SOCKET_FILE: ${PHP_SOCKET_FILE}
    volumes:
      - socket:${PHP_SOCKET_DIR}
    networks:
      - backend_app
    expose:
      - ${BACKEND_NGINX_PORT_HTTP?err}
    depends_on:
      - php-fpm
  php-fpm:
    build:
      context: ./
      dockerfile: tools/docker/services/php-fpm/Dockerfile
      args:
        APP_GROUP_NAME: ${APP_GROUP_NAME}
        APP_GROUP_ID: ${APP_GROUP_ID}
        PHP_SOCKET_DIR: ${PHP_SOCKET_DIR}
        PHP_SOCKET_FILE: ${PHP_SOCKET_FILE}
    environment:
      APP_ROOT_DIR: ${APP_ROOT_DIR}
      SYMFONY_CACHE_DIR:
      SYMFONY_LOG_DIR:
    volumes:
      - app:${APP_ROOT_DIR}/application:ro
      - vendor:${APP_ROOT_DIR}/vendor:ro
      - socket:${PHP_SOCKET_DIR}
  php-app:
    build:
      context: ./
      dockerfile: tools/docker/services/php-app/Dockerfile
      args:
        APP_CODE_DIR: ${APP_ROOT_DIR}/application
    volumes:
      - app:${APP_ROOT_DIR}/application
  php-composer:
    build:
      context: ./
      dockerfile: tools/docker/services/php-composer/Dockerfile
    volumes:
      - app:/build/application:ro
      - tests:/build/tests:ro
      - vendor:/build/vendor
      - ./composer.json:/build/composer.json
      - ./composer.lock:/build/composer.lock
  php-dev:
    build:
      context: ./
      dockerfile: tools/docker/services/php-dev/Dockerfile
    volumes:
      - app:/build/application:ro
      - tests:/build/tests:ro
      - vendor:/build/vendor:ro
      - ./composer.json:/build/composer.json
      - ./composer.lock:/build/composer.lock
volumes:
  socket:
  letsencrypt:
  certbot:
  dhparams:
  app:
  tests:
  vendor:
networks:
  frontend_web:
  backend_app:
