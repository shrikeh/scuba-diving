---
services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\Kit\:
    resource: '%kernel.project_dir%/app/Kit/*'
    exclude: '%kernel.project_dir%/app/Kit/{DependencyInjection}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Kit\Controller\:
    resource: '%kernel.project_dir%/app/Kit/Controller'
    tags: ['controller.service_arguments']

  App\Kit\Query\Bus\ItemDetailQueryBusInterface: '@App\Kit\Query\Bus\SymfonyQueryBus'

  App\Kit\Repository\Item\ItemRepositoryInterface: '@App\Kit\Repository\Item\ItemApi'

  App\Kit\Repository\Item\ItemApi:
    arguments:
      - '@app.kit.repository.item.client'

  App\Kit\Repository\Item\Decorator\Cache:
    decorates: App\Kit\Repository\Item\ItemRepositoryInterface
    arguments:
      - '@App\Kit\Repository\Item\Decorator\Cache.inner'
      - '@app.kit.repository.item.decorator.cache'

  app.kit.repository.item.decorator.cache:
    class: Symfony\Component\Cache\Psr16Cache
    arguments:
      - '@kit.item.cache'

  app.kit.repository.item.client:
    class: GuzzleHttp\Client

  Shrikeh\Diving\Kit\:
    resource: '%kernel.project_dir%/src/Kit/*'
