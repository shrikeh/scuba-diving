upstream app {
  server backend-cache:{{ .Env.BACKEND_CACHE_PORT_HTTP }};
}

server {
  # Send all traffic to HTTPS
  server_name localhost _;
  listen {{ .Env.FRONTEND_NGINX_PORT_HTTP }} default_server;
  listen [::]:{{ .Env.FRONTEND_NGINX_PORT_HTTP }};

  location /.well-known/acme-challenge/ {
      root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen {{ .Env.FRONTEND_NGINX_PORT_HTTPS }} ssl default_server;
  index index.html;

  ssl_certificate       /tls/{{ .Env.FRONTEND_NGINX_TLS_CERTIFICATE }};
  ssl_certificate_key   /tls/{{ .Env.FRONTEND_NGINX_TLS_KEY }};
  ssl_dhparam           /tls/{{ .Env.FRONTEND_NGINX_TLS_DHPARAMS }};

  include /etc/nginx/options-tls-nginx.conf;
  include /etc/nginx/pagespeed.conf;

  location / {
      location ~*  \.(jpg|jpeg|png|gif|ico|css|js|pdf|svg|html|json)$ {
          root /dist;
          limit_except GET {
              # block does not inherit the access limitations from above
              deny all;
          }
          expires             7d;
          access_log          off;
          sendfile            on;
          sendfile_max_chunk  1m;
          tcp_nopush          on;
      }

       try_files $uri /$uri =404;
  }

  error_page 404 = @app;
  error_page 405 = @error405;

  location @error405 {
    add_header Allow "GET, POST, HEAD" always;
  }

  location @app {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass http://app;
  }
}
